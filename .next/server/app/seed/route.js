(()=>{var e={};e.id=130,e.ids=[130],e.modules={7096:e=>{"use strict";e.exports=require("bcrypt")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5900:e=>{"use strict";e.exports=require("pg")},6113:e=>{"use strict";e.exports=require("crypto")},7147:e=>{"use strict";e.exports=require("fs")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},313:(e,t,r)=>{"use strict";r.r(t),r.d(t,{originalPathname:()=>D,patchFetch:()=>b,requestAsyncStorage:()=>_,routeModule:()=>h,serverHooks:()=>A,staticGenerationAsyncStorage:()=>I});var n={};r.r(n),r.d(n,{GET:()=>O});var a=r(9303),s=r(8716),o=r(670),i=r(5900),u=r(6636),l=r.n(u),c=r(7096),d=r.n(c);let p=[{id:"410544b2-4001-4271-9855-fec4b6a6442a",name:"User",email:"user@nextmail.com",password:"123456"}],m=[{id:"d6e15727-9fe1-4961-8c5b-ea44a9bd81aa",name:"Evil Rabbit",email:"evil@rabbit.com",image_url:"/customers/evil-rabbit.png"},{id:"3958dc9e-712f-4377-85e9-fec4b6a6442a",name:"Delba de Oliveira",email:"delba@oliveira.com",image_url:"/customers/delba-de-oliveira.png"},{id:"3958dc9e-742f-4377-85e9-fec4b6a6442a",name:"Lee Robinson",email:"lee@robinson.com",image_url:"/customers/lee-robinson.png"},{id:"76d65c26-f784-44a2-ac19-586678f7c2f2",name:"Michael Novotny",email:"michael@novotny.com",image_url:"/customers/michael-novotny.png"},{id:"CC27C14A-0ACF-4F4A-A6C9-D45682C144B9",name:"Amy Burns",email:"amy@burns.com",image_url:"/customers/amy-burns.png"},{id:"13D07535-C59E-4157-A011-F8D2EF4E0CBB",name:"Balazs Orban",email:"balazs@orban.com",image_url:"/customers/balazs-orban.png"}],E=[{customer_id:m[0].id,amount:15795,status:"pending",date:"2022-12-06"},{customer_id:m[1].id,amount:20348,status:"pending",date:"2022-11-14"},{customer_id:m[4].id,amount:3040,status:"paid",date:"2022-10-29"},{customer_id:m[3].id,amount:44800,status:"paid",date:"2023-09-10"},{customer_id:m[5].id,amount:34577,status:"pending",date:"2023-08-05"},{customer_id:m[2].id,amount:54246,status:"pending",date:"2023-07-16"},{customer_id:m[0].id,amount:666,status:"pending",date:"2023-06-27"},{customer_id:m[3].id,amount:32545,status:"paid",date:"2023-06-09"},{customer_id:m[4].id,amount:1250,status:"paid",date:"2023-06-17"},{customer_id:m[5].id,amount:8546,status:"paid",date:"2023-06-07"},{customer_id:m[1].id,amount:500,status:"paid",date:"2023-08-19"},{customer_id:m[5].id,amount:8945,status:"paid",date:"2023-06-03"},{customer_id:m[2].id,amount:1e3,status:"paid",date:"2022-06-05"}],v=[{month:"Jan",revenue:2e3},{month:"Feb",revenue:1800},{month:"Mar",revenue:2200},{month:"Apr",revenue:2500},{month:"May",revenue:2300},{month:"Jun",revenue:3200},{month:"Jul",revenue:3500},{month:"Aug",revenue:3700},{month:"Sep",revenue:2500},{month:"Oct",revenue:2800},{month:"Nov",revenue:3e3},{month:"Dec",revenue:4800}];l().config();let N=new i.Pool({connectionString:process.env.POSTGRES_URL});async function f(){let e=await N.connect();try{return await e.query('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"'),await e.query(`
      CREATE TABLE IF NOT EXISTS users (
        id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        email TEXT NOT NULL UNIQUE,
        password TEXT NOT NULL
      );
    `),await Promise.all(p.map(async t=>{let r=await d().hash(t.password,10);return e.query(`
          INSERT INTO users (id, name, email, password)
          VALUES ($1, $2, $3, $4)
          ON CONFLICT (id) DO NOTHING;
        `,[t.id,t.name,t.email,r])}))}finally{e.release()}}async function g(){let e=await N.connect();try{return await e.query('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"'),await e.query(`
      CREATE TABLE IF NOT EXISTS invoices (
        id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
        customer_id UUID NOT NULL,
        amount INT NOT NULL,
        status VARCHAR(255) NOT NULL,
        date DATE NOT NULL
      );
    `),await Promise.all(E.map(t=>e.query(`
            INSERT INTO invoices (customer_id, amount, status, date)
            VALUES ($1, $2, $3, $4)
            ON CONFLICT (id) DO NOTHING;
          `,[t.customer_id,t.amount,t.status,t.date])))}finally{e.release()}}async function T(){let e=await N.connect();try{return await e.query('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"'),await e.query(`
      CREATE TABLE IF NOT EXISTS customers (
        id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        email VARCHAR(255) NOT NULL,
        image_url VARCHAR(255) NOT NULL
      );
    `),await Promise.all(m.map(t=>e.query(`
            INSERT INTO customers (id, name, email, image_url)
            VALUES ($1, $2, $3, $4)
            ON CONFLICT (id) DO NOTHING;
          `,[t.id,t.name,t.email,t.image_url])))}finally{e.release()}}async function y(){let e=await N.connect();try{return await e.query(`
      CREATE TABLE IF NOT EXISTS revenue (
        month VARCHAR(4) NOT NULL UNIQUE,
        revenue INT NOT NULL
      );
    `),await Promise.all(v.map(t=>e.query(`
            INSERT INTO revenue (month, revenue)
            VALUES ($1, $2)
            ON CONFLICT (month) DO NOTHING;
          `,[t.month,t.revenue])))}finally{e.release()}}async function O(){try{return await N.query("BEGIN"),await f(),await T(),await g(),await y(),await N.query("COMMIT"),new Response(JSON.stringify({message:"Database seeded successfully"}),{status:200})}catch(t){await N.query("ROLLBACK"),console.error("Seeding error:",t);let e="An error occurred during seeding";return t instanceof Error&&(e=t.message),new Response(JSON.stringify({error:e}),{status:500})}}let h=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/seed/route",pathname:"/seed",filename:"route",bundlePath:"app/seed/route"},resolvedPagePath:"C:\\admn-dashboard\\app\\seed\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:_,staticGenerationAsyncStorage:I,serverHooks:A}=h,D="/seed/route";function b(){return(0,o.patchFetch)({serverHooks:A,staticGenerationAsyncStorage:I})}},6636:(e,t,r)=>{let n=r(7147),a=r(1017),s=r(2037),o=r(6113),i=r(1564).version,u=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function l(e){console.log(`[dotenv@${i}][DEBUG] ${e}`)}function c(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function d(e){let t=null;if(e&&e.path&&e.path.length>0){if(Array.isArray(e.path))for(let r of e.path)n.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`}else t=a.resolve(process.cwd(),".env.vault");return n.existsSync(t)?t:null}function p(e){return"~"===e[0]?a.join(s.homedir(),e.slice(1)):e}let m={configDotenv:function(e){let t;let r=a.resolve(process.cwd(),".env"),s="utf8",o=!!(e&&e.debug);e&&e.encoding?s=e.encoding:o&&l("No encoding is specified. UTF-8 is used by default");let i=[r];if(e&&e.path){if(Array.isArray(e.path))for(let t of(i=[],e.path))i.push(p(t));else i=[p(e.path)]}let u={};for(let r of i)try{let t=m.parse(n.readFileSync(r,{encoding:s}));m.populate(u,t,e)}catch(e){o&&l(`Failed to load ${r} ${e.message}`),t=e}let c=process.env;return(e&&null!=e.processEnv&&(c=e.processEnv),m.populate(c,u,e),t)?{parsed:u,error:t}:{parsed:u}},_configVault:function(e){console.log(`[dotenv@${i}][INFO] Loading env from encrypted .env.vault`);let t=m._parseVault(e),r=process.env;return e&&null!=e.processEnv&&(r=e.processEnv),m.populate(r,t,e),{parsed:t}},_parseVault:function(e){let t;let r=d(e),n=m.configDotenv({path:r});if(!n.parsed){let e=Error(`MISSING_DATA: Cannot parse ${r} for an unknown reason`);throw e.code="MISSING_DATA",e}let a=c(e).split(","),s=a.length;for(let e=0;e<s;e++)try{let r=a[e].trim(),s=function(e,t){let r;try{r=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){let e=Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}let n=r.password;if(!n){let e=Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}let a=r.searchParams.get("environment");if(!a){let e=Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}let s=`DOTENV_VAULT_${a.toUpperCase()}`,o=e.parsed[s];if(!o){let e=Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:o,key:n}}(n,r);t=m.decrypt(s.ciphertext,s.key);break}catch(t){if(e+1>=s)throw t}return m.parse(t)},config:function(e){if(0===c(e).length)return m.configDotenv(e);let t=d(e);if(!t){var r;return r=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${i}][WARN] ${r}`),m.configDotenv(e)}return m._configVault(e)},decrypt:function(e,t){let r=Buffer.from(t.slice(-64),"hex"),n=Buffer.from(e,"base64"),a=n.subarray(0,12),s=n.subarray(-16);n=n.subarray(12,-16);try{let e=o.createDecipheriv("aes-256-gcm",r,a);return e.setAuthTag(s),`${e.update(n)}${e.final()}`}catch(n){let e=n instanceof RangeError,t="Invalid key length"===n.message,r="Unsupported state or unable to authenticate data"===n.message;if(e||t){let e=Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(r){let e=Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw n}},parse:function(e){let t;let r={},n=e.toString();for(n=n.replace(/\r\n?/mg,"\n");null!=(t=u.exec(n));){let e=t[1],n=t[2]||"",a=(n=n.trim())[0];n=n.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),'"'===a&&(n=(n=n.replace(/\\n/g,"\n")).replace(/\\r/g,"\r")),r[e]=n}return r},populate:function(e,t,r={}){let n=!!(r&&r.debug),a=!!(r&&r.override);if("object"!=typeof t){let e=Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(!0===a&&(e[r]=t[r]),n&&(!0===a?l(`"${r}" is already defined and WAS overwritten`):l(`"${r}" is already defined and was NOT overwritten`))):e[r]=t[r]}};e.exports.configDotenv=m.configDotenv,e.exports._configVault=m._configVault,e.exports._parseVault=m._parseVault,e.exports.config=m.config,e.exports.decrypt=m.decrypt,e.exports.parse=m.parse,e.exports.populate=m.populate,e.exports=m},9303:(e,t,r)=>{"use strict";e.exports=r(517)},1564:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.4.5","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}};var t=require("../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[948],()=>r(313));module.exports=n})();